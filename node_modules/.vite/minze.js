// node_modules/minze/dist/module.js
var t = Symbol("isProxy");
function e(t2) {
  return t2.replace(/\B([A-Z])(?=[a-z])/g, "-$1").replace(/\B([a-z0-9])([A-Z])/g, "$1-$2").toLowerCase();
}
function i(t2) {
  return t2.replace(/-([a-z])/g, (t3) => t3[1].toUpperCase());
}
function n(t2, ...e2) {
  console.warn(`[Minze warn] ${t2}`, ...e2);
}
var Minze = class {
  static define(t2, e2) {
    customElements.define(t2, e2);
  }
  static defineAll(t2) {
    Array.isArray(t2) || (t2 = Object.values(t2)), t2.forEach((t3) => {
      const i2 = e(t3.name);
      customElements.define(i2, t3);
    });
  }
  static cast(t2, e2) {
    dispatchEvent(new CustomEvent(t2, { detail: e2 }));
  }
  static listen(t2, e2) {
    addEventListener(t2, e2, true);
  }
  static stopListen(t2, e2) {
    removeEventListener(t2, e2, true);
  }
};
function o(t2, e2, i2, n2) {
  return new (i2 || (i2 = Promise))(function(o2, s2) {
    function r2(t3) {
      try {
        a(n2.next(t3));
      } catch (t4) {
        s2(t4);
      }
    }
    function l2(t3) {
      try {
        a(n2.throw(t3));
      } catch (t4) {
        s2(t4);
      }
    }
    function a(t3) {
      var e3;
      t3.done ? o2(t3.value) : (e3 = t3.value, e3 instanceof i2 ? e3 : new i2(function(t4) {
        t4(e3);
      })).then(r2, l2);
    }
    a((n2 = n2.apply(t2, e2 || [])).next());
  });
}
function s(t2, e2) {
  const i2 = typeof t2 == "function" ? t2() : t2, n2 = document.createElement("template");
  n2.innerHTML = i2, r(n2, e2), l(n2, e2);
}
function r(t2, e2) {
  const i2 = t2 instanceof HTMLTemplateElement ? t2.content.childNodes : t2.childNodes;
  i2.length === e2.childNodes.length ? Array.from(i2).forEach((t3, i3) => {
    const n2 = t3, o2 = e2.childNodes[i3];
    n2.isEqualNode(o2) || (o2.nodeType === Node.TEXT_NODE || o2.nodeType === Node.COMMENT_NODE ? o2.textContent = n2.textContent : o2.nodeType === Node.ELEMENT_NODE && r(n2, o2));
  }) : e2.textContent = t2.textContent;
}
function l(t2, e2) {
  const i2 = t2 instanceof HTMLTemplateElement ? t2.content.children : t2.children;
  i2.length === e2.children.length ? Array.from(i2).some((t3, i3) => {
    const n2 = t3, o2 = e2.children[i3];
    if (!n2.isEqualNode(o2)) {
      if (n2.nodeName !== o2.nodeName)
        return void o2.replaceWith(n2);
      Array.from(n2.attributes).forEach((t4) => {
        t4.value !== o2.getAttribute(t4.name) && o2.setAttribute(t4.name, t4.value);
      }), Array.from(o2.attributes).forEach((t4) => {
        n2.hasAttribute(t4.name) || o2.removeAttribute(t4.name);
      }), l(n2, o2);
    }
  }) : e2.innerHTML = t2.innerHTML;
}
Minze.version = "1.0.3";
var MinzeElement = class extends HTMLElement {
  constructor() {
    super(), this.version = "1.0.3", this.cachedTemplate = null, this.attachShadow({ mode: "open" });
  }
  static get dashName() {
    return e(this.name);
  }
  static define(t2) {
    t2 || (t2 = e(this.name)), customElements && customElements.define(t2, this);
  }
  template() {
    var t2, e2, i2, n2;
    return `
      <style>
        :host { box-sizing: border-box; display: block; }
        :host([hidden]) { display: none }
        * { box-sizing: border-box; }
        ${(e2 = (t2 = this.css) === null || t2 === void 0 ? void 0 : t2.call(this)) !== null && e2 !== void 0 ? e2 : ""}
      </style>
      ${(n2 = (i2 = this.html) === null || i2 === void 0 ? void 0 : i2.call(this)) !== null && n2 !== void 0 ? n2 : "<slot></slot>"}
    `;
  }
  render(t2) {
    var e2, i2, n2, r2;
    return o(this, void 0, void 0, function* () {
      if (this.shadowRoot) {
        const l2 = this.template();
        if (l2 !== this.cachedTemplate || t2) {
          const a = this.cachedTemplate;
          this.cachedTemplate = l2, yield (e2 = this.beforeRender) === null || e2 === void 0 ? void 0 : e2.call(this), (i2 = this.eventListeners) === null || i2 === void 0 || i2.forEach((t3) => o(this, void 0, void 0, function* () {
            return this.registerEvent(t3, "remove");
          })), !a || t2 ? this.shadowRoot.innerHTML = l2 : s(l2, this.shadowRoot), (n2 = this.eventListeners) === null || n2 === void 0 || n2.forEach((t3) => o(this, void 0, void 0, function* () {
            return this.registerEvent(t3, "add");
          })), (r2 = this.onRender) === null || r2 === void 0 || r2.call(this);
        }
      }
    });
  }
  rerender(t2) {
    this.render(t2);
  }
  select(t2) {
    var e2;
    const i2 = this.shadowRoot;
    return (e2 = i2 == null ? void 0 : i2.querySelector(t2)) !== null && e2 !== void 0 ? e2 : null;
  }
  selectAll(t2) {
    var e2;
    const i2 = this.shadowRoot;
    return (e2 = i2 == null ? void 0 : i2.querySelectorAll(t2)) !== null && e2 !== void 0 ? e2 : null;
  }
  exposeAttr(t2, i2) {
    const n2 = e(t2);
    this.setAttribute(n2, typeof i2 == "object" ? JSON.stringify(i2) : String(i2));
  }
  reactiveChange(t2, i2, n2, s2, r2, l2, a) {
    var h;
    return o(this, void 0, void 0, function* () {
      const n3 = i2, c = e(i2);
      (h = this.watch) === null || h === void 0 || h.forEach(([e2, i3]) => o(this, void 0, void 0, function* () {
        (e2 === n3 || t2 === "attr" && e2 === c) && i3(l2, a, r2, s2);
      })), this.render();
    });
  }
  makeComplexReactive(e2, i2, n2) {
    const o2 = e2, s2 = i2;
    n2 && this.exposeAttr(o2, s2);
    const r2 = () => ({ get: (e3, i3) => {
      if (i3 === t)
        return true;
      let n3 = Reflect.get(e3, i3);
      return typeof n3 != "object" || n3[t] || (n3 = l2(n3), Reflect.set(e3, i3, n3)), n3;
    }, set: (t2, e3, i3) => {
      const r3 = Reflect.get(t2, e3);
      return r3 !== i3 && (Reflect.set(t2, e3, i3), n2 && this.exposeAttr(o2, s2), this.reactiveChange("complex", o2, s2, t2, e3, i3, r3)), true;
    } }), l2 = (t2) => new Proxy(t2, r2());
    this[o2] = l2(s2);
  }
  makePrimitiveReactive(t2, e2, i2) {
    const n2 = t2, o2 = `$minze_stash_prop_${t2}`;
    this[o2] = e2, i2 && this.exposeAttr(t2, e2), Object.defineProperty(this, t2, { get: () => this[o2], set: (e3) => {
      const s2 = this[o2];
      s2 !== e3 && (this[o2] = e3, i2 && this.exposeAttr(t2, e3), this.reactiveChange("primitive", n2, this[o2], this, n2, e3, s2));
    } });
  }
  registerProp(t2) {
    const e2 = typeof t2 == "string" ? t2 : t2[0], i2 = typeof t2 == "string" ? null : t2[1], o2 = typeof t2 == "string" ? void 0 : t2[2], s2 = e2;
    s2 in this ? n(`A property with the name "${s2}" already exists in this component.`) : i2 && typeof i2 == "object" ? this.makeComplexReactive(s2, i2, o2) : this.makePrimitiveReactive(s2, i2, o2);
  }
  registerAttr(t2) {
    const e2 = typeof t2 == "string" ? t2 : t2[0], o2 = typeof t2 == "string" ? null : t2[1], s2 = i(e2), r2 = e2, l2 = s2, a = typeof o2 == "object" ? JSON.stringify(o2) : String(o2);
    if (s2 in this)
      return void n(`A property with the name "${s2}" already exists.`);
    const h = `$minze_stash_attr_${s2}`;
    this[h] = a, Array.isArray(t2) && t2.length === 2 && !this.getAttribute(r2) && this.setAttribute(r2, a), Object.defineProperty(this, s2, { get: () => {
      const t3 = this.getAttribute(r2);
      return t3 == "undefined" ? void 0 : t3 == "null" ? null : (t3 == null ? void 0 : t3.match(/^(true|false)$/)) ? JSON.parse(t3) : t3;
    }, set: (t3) => {
      const e3 = this[h];
      e3 !== t3 && (this[h] = t3, this.reactiveChange("attr", l2, this[h], this, l2, t3, e3));
    } });
  }
  registerEvent(t2, e2) {
    var i2;
    const [n2, o2, s2] = t2;
    let r2;
    n2 === window ? r2 = [window] : n2 instanceof MinzeElement ? r2 = [this] : typeof n2 == "string" && (r2 = (i2 = this.shadowRoot) === null || i2 === void 0 ? void 0 : i2.querySelectorAll(n2)), r2 == null || r2.forEach((t3) => {
      e2 === "add" ? t3.addEventListener(o2, s2, true) : t3.removeEventListener(o2, s2, true);
    });
  }
  cast(t2, e2) {
    this.dispatchEvent(new CustomEvent(t2, { detail: e2 }));
  }
  connectedCallback() {
    var t2, e2, i2, n2, s2, r2, l2;
    return o(this, void 0, void 0, function* () {
      (t2 = this.onStart) === null || t2 === void 0 || t2.call(this), (e2 = this.reactive) === null || e2 === void 0 || e2.forEach((t3) => o(this, void 0, void 0, function* () {
        return this.registerProp(t3);
      })), (i2 = this.attrs) === null || i2 === void 0 || i2.forEach((t3) => o(this, void 0, void 0, function* () {
        return this.registerAttr(t3);
      })), (n2 = this.onReactive) === null || n2 === void 0 || n2.call(this), yield this.render(), ((r2 = (s2 = this.options) === null || s2 === void 0 ? void 0 : s2.exposeAttrs) === null || r2 === void 0 ? void 0 : r2.rendered) && this.setAttribute("rendered", ""), (l2 = this.onReady) === null || l2 === void 0 || l2.call(this);
    });
  }
  disconnectedCallback() {
    var t2, e2;
    return o(this, void 0, void 0, function* () {
      (t2 = this.eventListeners) === null || t2 === void 0 || t2.forEach((t3) => o(this, void 0, void 0, function* () {
        return this.registerEvent(t3, "remove");
      })), (e2 = this.onDestroy) === null || e2 === void 0 || e2.call(this);
    });
  }
  adoptedCallback() {
    var t2, e2;
    return o(this, void 0, void 0, function* () {
      (t2 = this.eventListeners) === null || t2 === void 0 || t2.forEach((t3) => o(this, void 0, void 0, function* () {
        return this.registerEvent(t3, "remove");
      })), (e2 = this.onMove) === null || e2 === void 0 || e2.call(this);
    });
  }
  attributeChangedCallback(t2, e2, n2) {
    var s2, r2;
    return o(this, void 0, void 0, function* () {
      yield (s2 = this.beforeAttributeChange) === null || s2 === void 0 ? void 0 : s2.call(this, t2, e2, n2);
      const o2 = i(t2);
      o2 in this && n2 !== e2 && (this[o2] = n2), (r2 = this.onAttributeChange) === null || r2 === void 0 || r2.call(this, t2, e2, n2);
    });
  }
};

// dep:minze
var minze_default = Minze;
export {
  Minze,
  MinzeElement,
  minze_default as default
};
//# sourceMappingURL=minze.js.map
